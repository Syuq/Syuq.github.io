{"version":3,"sources":["webpack:///./src/templates/post/post.module.less","webpack:///./src/components/Comment/index.jsx","webpack:///./src/templates/post/post.jsx"],"names":["module","exports","Comments","componentDidMount","d","s","this","props","pageCanonicalUrl","pageId","window","DISQUS","reset","reload","config","page","url","identifier","disqus_config","document","createElement","src","Config","disqusScript","setAttribute","Date","head","body","appendChild","render","id","React","Component","pageQuery","Post","data","markdownRemark","html","frontmatter","title","fluid","cover","childImageSharp","excerpt","path","canonicalUrl","Utils","resolvePageUrl","siteUrl","pathPrefix","className","description","keywords","Header","Sidebar","style","bannerImgContainer","bannerImg","alt","blogArticle","dangerouslySetInnerHTML","__html","Comment"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,mBAAqB,yCAAyC,UAAY,gCAAgC,YAAc,oC,wLCgD3HC,E,0GAzCbC,kBAAA,WAAqB,IAkBTC,EACAC,EAnBQ,SACmBC,KAAKC,MAAlCC,EADU,EACVA,iBAAkBC,EADR,EACQA,OAEtBC,OAAOC,OACTD,OAAOC,OAAOC,MAAM,CAClBC,QAAQ,EACRC,OAFkB,WAGhBR,KAAKS,KAAKC,IAAMR,EAChBF,KAAKS,KAAKE,WAAaR,MAI3BC,OAAOQ,cAAgB,WACrB,EAAKH,KAAKC,IAAMR,EAChB,EAAKO,KAAKE,WAAaR,GAIjBL,EAAIe,UACJd,EAAID,EAAEgB,cAAc,WACxBC,IAAMC,IAAOC,aACflB,EAAEmB,aAAa,kBAAmB,IAAIC,OACrCrB,EAAEsB,MAAQtB,EAAEuB,MAAMC,YAAYvB,K,EAKrCwB,OAAA,WACE,OACE,6BACE,yBAAKC,GAAG,oB,GA/BOC,IAAMC,W,oGCoEhBC,EAAS,WA+CPC,UA3GF,SAAC,GAAc,IAAD,IAAXC,KACqBC,eAA3BC,EADiB,EACjBA,KAAMC,EADW,EACXA,YAEZC,EAMED,EANFC,MAEqBC,EAInBF,EALFG,MACEC,gBAAmBF,MAErBG,EAEEL,EAFFK,QACAC,EACEN,EADFM,KAGIC,EAAeC,IAAMC,eACzBzB,IAAO0B,QACP1B,IAAO2B,WACPL,GAEF,OACE,uBAAQM,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,CACEX,MAAOA,EACPY,YAAaR,EACbC,KAAMA,EACNQ,SAAU,CACR,MACA,MACA,MACA,sBACA,SACA,UACA,mBACA,kBACA,gCAGJ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,yBAAKJ,UAAU,kBACb,4BAAKX,GACL,yBAAKW,UAAWK,IAAMC,oBACpB,kBAAC,IAAD,CACEN,UAAWK,IAAME,UACjBjB,MAAOA,EACPD,MAAOI,EACPe,IAAKnB,KAIT,6BACEW,UAAWK,IAAMI,YACjBC,wBAAyB,CAAEC,OAAQxB,KAErC,kBAACyB,EAAD,CAAStD,iBAAkBqC,EAAcpC,OAAQ8B,U","file":"component---src-templates-post-post-jsx-d847fd17f1b18d18a16c.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerImgContainer\":\"post-module--bannerImgContainer--3SopW\",\"bannerImg\":\"post-module--bannerImg--2yAgf\",\"blogArticle\":\"post-module--blogArticle--1Ro02\"};","/* eslint-disable func-names */\n/* Vendor imports */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n/* App imports */\nimport Config from '../../../config';\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { pageCanonicalUrl, pageId } = this.props;\n\n    if (window.DISQUS) {\n      window.DISQUS.reset({\n        reload: true,\n        config() {\n          this.page.url = pageCanonicalUrl;\n          this.page.identifier = pageId;\n        },\n      });\n    } else {\n      window.disqus_config = () => {\n        this.page.url = pageCanonicalUrl;\n        this.page.identifier = pageId;\n      };\n      (function () {\n        // eslint-disable-next-line no-undef\n        const d = document;\n        const s = d.createElement('script');\n        s.src = Config.disqusScript;\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n      }());\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"disqus_thread\" />\n      </div>\n    );\n  }\n}\n\nComments.propTypes = {\n  pageCanonicalUrl: PropTypes.string.isRequired,\n  pageId: PropTypes.string.isRequired,\n};\n\nexport default Comments;\n","import { Layout } from 'antd';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport Config from '../../../config';\nimport Comment from '../../components/Comment';\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport SEO from '../../components/Seo';\nimport Utils from '../../utils/pageUtils';\n\nimport 'prismjs/themes/prism-solarizedlight.css';\nimport './highlight-syntax.less';\nimport style from './post.module.less';\n\nconst Post = ({ data }) => {\n  const { html, frontmatter } = data.markdownRemark;\n  const {\n    title,\n    cover: {\n      childImageSharp: { fluid },\n    },\n    excerpt,\n    path,\n  } = frontmatter;\n\n  const canonicalUrl = Utils.resolvePageUrl(\n    Config.siteUrl,\n    Config.pathPrefix,\n    path,\n  );\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <SEO\n          title={title}\n          description={excerpt}\n          path={path}\n          keywords={[\n            'Dao',\n            'Duy',\n            'Quy',\n            'FullStack developer',\n            'Python',\n            'ReactJS',\n            'Machine Learning',\n            'Online Learning',\n            'Streaming Machine Learning',\n          ]}\n        />\n        <Header />\n        <SidebarWrapper>\n          <div className=\"marginTopTitle\">\n            <h1>{title}</h1>\n            <div className={style.bannerImgContainer}>\n              <Img\n                className={style.bannerImg}\n                fluid={fluid}\n                title={excerpt}\n                alt={title}\n              />\n            </div>\n            {/* eslint-disable-next-line react/no-danger */}\n            <article\n              className={style.blogArticle}\n              dangerouslySetInnerHTML={{ __html: html }}\n            />\n            <Comment pageCanonicalUrl={canonicalUrl} pageId={title} />\n          </div>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($postPath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $postPath } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        tags\n        path\n        excerpt\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { ne: $postPath } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"sourceRoot":""}